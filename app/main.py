from fastapi import FastAPI, Query
import spacy

# 加载 spaCy 模型（提前用 uv 安装了 en_core_web_md）
nlp = spacy.load("en_core_web_md")

app = FastAPI()

@app.get("/")
def read_root():
    return {"message": "Hello, FastAPI with UV!"}


@app.get("/embedding")
def get_embedding(word: str = Query(..., description="Enter a word or phrase")):
    """
    Given a word/phrase, returns the embedding vector generated by spaCy
    """
    doc = nlp(word)

    # 如果输入只有一个 token，就取 token 向量；否则取整个 doc 的向量
    if len(doc) == 1:
        vector = doc[0].vector
    else:
        vector = doc.vector

    return {
        "input": word,
        "vector_dim": len(vector),
        "vector": vector.tolist()[:20],  # 只显示前 20 维，避免返回太长
        "note": "Only the first 20 dimensions are shown, see vector_dim for the full vector dimensions"
    }